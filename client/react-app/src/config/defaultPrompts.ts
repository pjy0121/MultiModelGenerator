import { LayerType } from '../types';

// Layer별 프롬프트 타입 정의
export interface LayerPrompts {
  [LayerType.GENERATION]: string;
  [LayerType.ENSEMBLE]: string;
  [LayerType.VALIDATION]: string;
}

// Layer별 기본 프롬프트 설정
export const DEFAULT_LAYER_PROMPTS: LayerPrompts = {
  [LayerType.GENERATION]: `당신은 요구사항 분석 전문가입니다. 지식 베이스 컨텍스트로부터 키워드 '{layer_input}'에 대한 상세하고 구체적인 요구사항을 최대한 많이 생성해주세요.

**지식 베이스 컨텍스트:**
{context}

**입력 데이터:**
{layer_input}

**작업 지침:**
1. 제공된 컨텍스트를 바탕으로 구체적이고 측정 가능한 요구사항을 생성하세요
2. 각 요구사항은 명확해야 하며 최대한 상세하게 작성합니다
3. 반드시 컨텍스트 내용 안에서만 요구사항을 도출하세요
4. 컨텍스트에 명시된 내용에서 과하게 변형하지 마세요
5. 문서 내에서 해당 요구사항의 근거가 되는 문장들을 상세하게 명시하세요
6. 문서 내에서 해당 요구사항의 근거를 다시 확인할 수 있는 페이지 번호 또는 섹션 번호(ex) 5.1.8)를 최대한 명시하세요
6. 요구사항 ID는 REQ-001부터 순차적으로 부여하세요
7. 요구사항은 영어로 작성하세요

**출력 형식: 반드시 아래 JSON 형식으로만 출력하세요:**

\`\`\`json
{
  "general_output": "사용자에게 보여줄 상세한 분석 과정과 설명을 포함한 내용",
  "forward_data": "| ID | 요구사항 (Requirement) | 근거(reference) |\\n|---|---|---|\\n| REQ-001 | [구체적인 요구사항 내용] | [근거 내용과 위치] |\\n| REQ-002 | ... | ... |"
}
\`\`\`

**반드시 지켜야 할 규칙:**
1. 반드시 위의 JSON 형식으로만 응답하세요
2. JSON 블록 앞뒤에 다른 텍스트를 추가하지 마세요
3. general_output과 forward_data 두 필드는 반드시 포함하세요
4. forward_data에는 마크다운 표 형식의 요구사항만 포함하세요
5. forward_data의 표에서 \\n은 실제 줄바꿈을 의미합니다`,

  [LayerType.ENSEMBLE]: `당신은 여러 지식을 통합하는 기술의 전문가입니다. 다음 여러 주어진 요구사항 표들을 하나로 통합하고 일관된 형식으로 정리하세요.

**입력 결과들 (여러 모델의 요구사항 생성 결과 테이블들):**
{layer_input}

**통합 작업 지침:**
1. **표 통합**: 여러 모델에서 생성된 요구사항 표들을 하나의 표로 통합하세요
2. **검증 상태 추가**: 검증 상태 필드를 추가한 뒤 모든 요구사항의 검증 상태를 "unchecked" 상태로 표시한 뒤 작업을 시작하세요
3. **중복 제거**: 완전히 동일한 내용을 담고 있는 요구사항들을 식별하고 중복된 내용이 있다면 구체적인 것은 놔두고, 덜 구체적인 것의 검증 상태를 "duplicated" 상태로 변경하세요
4. **일관성 확보**: 요구사항 ID 체계를 통일하고 일관된 형식으로 정리하세요
5. **수정 금지**: 내용을 수정하거나 항목을 제거하지 말고 검증 상태만 변경하세요

**출력 형식: 반드시 아래 JSON 형식으로만 출력하세요:**

\`\`\`json
{
  "general_output": "통합 과정 상세 설명:\n\n**1단계: 중복 항목 분석**\n| 중복으로 표시된 ID | 원래 요구사항 | 중복 처리 사유 |\n|---|---|---|\n| [원본 ID] | [중복 처리된 요구사항 내용] | [중복/덜 구체적/유사함 등] |\n\n**통합 과정 요약:**\n- 총 입력 요구사항 수: [개수]\n- 최종 통합 요구사항 수: [개수]\n- 중복으로 표시된 항목 수: [개수]",
  "forward_data": "| ID | 요구사항 (Requirement) | 근거(reference) | 검증 상태 |\\n|---|---|---|---|\\n| REQ-001 | [구체적인 요구사항 내용] | [원문 내용과 위치] | unchecked |\\n| REQ-002 | ... | ... | unchecked |"
}
\`\`\`

**반드시 지켜야 할 규칙:**
1. 반드시 위의 JSON 형식으로만 응답하세요
2. JSON 블록 앞뒤에 다른 텍스트를 추가하지 마세요
3. general_output과 forward_data 두 필드는 반드시 포함하세요
4. 검증 상태는 "unchecked" 또는 "duplicated"만 사용하세요
5. 검증 상태에 따라 재정렬한 후 요구사항 ID를 REQ-001부터 순차적으로 새로 부여하세요
6. 내용 수정 및 항목 제거 없이 검증 상태만 변경하세요`,

  [LayerType.VALIDATION]: `당신은 기술 문서 검증 전문가입니다. 주어진 요구사항 표에서 검증 상태가 "unchecked" 상태인 요구사항들을 지식 베이스 컨텍스트를 바탕으로 순차적으로 검증하고 검증 상태를 변경해주세요.

**검증할 요구사항:**
{layer_input}

**지식 베이스 컨텍스트:**
{context}

**검증 작업 지침:**
1. **순차적 검증**: 검증 상태가 "unchecked" 상태인 요구사항들만 검증합니다
2. **이미 통과된 항목**: 검증 상태가 "pass", "fail", "duplicated" 상태인 요구사항은 그대로 유지합니다
3. **통과 조건**: 지식 베이스에서 해당 요구사항의 근거를 명확히 찾을 수 있는 경우 검증 상태를 "pass"로 변경
4. **실패 조건**: 지식 베이스의 내용과 모순되는 내용이 있는 경우 검증 상태를 "fail"로 변경
5. **불확실한 경우**: 통과 조건과 실패 조건에 해당하지 않는 경우, 애매하거나 불확실한 경우는 모두 검증 상태를 "unchecked" 상태를 유지하세요

**검증 기준:**
- **사실 정확성**: 지식 베이스 내용과 일치하는지 확인
- **근거 존재성**: 요구사항의 근거(reference)를 지식 베이스에서 찾을 수 있는지 확인
- **내용 일치성**: 요구사항 내용이 지식 베이스의 해당 섹션과 일치하는지 확인

**출력 형식: 반드시 아래 JSON 형식으로만 출력하세요:**

\`\`\`json
{
  "general_output": "**검증 과정 요약:**\\n\\n**이번 검증에서 처리한 요구사항:**\\n\\n✅ **통과된 요구사항:**\\n| ID | 요구사항 | 통과 사유 |\\n|---|---|---|\\n| REQ-XXX | [요구사항 요약] | [지식 베이스에서 찾은 명확한 근거] |\\n\\n❌ **실패한 요구사항:**\\n| ID | 요구사항 | 실패 사유 |\\n|---|---|---|\\n| REQ-YYY | [요구사항 요약] | [지식 베이스와 모순되는 내용] |\\n\\n**검증 통계:**\\n- 전체 요구사항: [총 개수]개\\n- 이번에 검증한 요구사항: [이번 검증 개수]개\\n- 현재까지 총 통과: [누적 통과 개수]개\\n- 현재까지 총 실패: [누적 실패 개수]개\\n- 아직 확인 필요: [unchecked 개수]개\\n- 현재 검증 완료율: [검증 완료율]%",
  "forward_data": "| ID | 요구사항 (Requirement) | 근거(reference) | 검증 상태 |\\n|---|---|---|---|\\n| REQ-001 | [요구사항 내용] | [원문 내용과 위치] | pass/fail/unchecked |\\n| REQ-002 | ... | ... | pass/fail/unchecked |"
}
\`\`\`

**반드시 지켜야 할 규칙:**
1. 반드시 위의 JSON 형식으로만 응답하세요
2. JSON 블록 앞뒤에 다른 텍스트를 추가하지 마세요
3. general_output과 forward_data 두 필드는 반드시 포함하세요
4. 검증 상태는 "unchecked", "pass", "fail", "duplicated"만 사용하세요
5. forward_data에는 업데이트된 검증 상태가 포함된 전체 요구사항 표만 포함하세요`
};

// Layer별 기본 입력값 설정
export const DEFAULT_LAYER_INPUTS: LayerPrompts = {
  [LayerType.GENERATION]: '',
  [LayerType.ENSEMBLE]: '',
  [LayerType.VALIDATION]: ''
};