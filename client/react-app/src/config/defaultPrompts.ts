// 노드 타입별 기본 프롬프트 템플릿
export const DEFAULT_PROMPTS = {
  'generation-node': `당신은 요구사항 분석 전문가입니다. 지식 베이스 컨텍스트로부터 키워드 '{input_data}'에 대한 상세하고 구체적인 요구사항을 최대한 많이 생성해주세요.

**지식 베이스 컨텍스트:**
{context}

**입력 데이터:**
{input_data}

**작업 지침:**
1. 제공된 컨텍스트를 바탕으로 구체적이고 수준 높은 요구사항을 생성하세요
2. 각 요구사항은 명확해야 하며 최대한 상세하게 작성합니다
3. 반드시 컨텍스트 내용 안에서만 요구사항을 도출하세요
4. 컨텍스트에 명시된 내용에서 과하게 변형하지 마세요
5. 문서 내에서 해당 요구사항의 근거가 되는 문장들을 상세하게 명시하세요
6. 문서 내에서 해당 요구사항의 근거를 다시 확인할 수 있는 페이지 번호 또는 섹션 번호(ex) 5.1.8)를 최대한 명시하세요
6. 요구사항 ID는 REQ-001부터 순차적으로 부여하세요
7. 요구사항은 영어로 작성하세요`,

  'ensemble-node': `당신은 여러 지식을 통합하는 기술의 전문가입니다. 다음 여러 주어진 요구사항 표들을 하나로 통합하고 일관된 형식으로 정리하세요.

**입력 결과들 (여러 모델의 요구사항 생성 결과 테이블들):**
{input_data}

**통합 작업 지침:**
1. **표 통합**: 여러 모델에서 생성된 요구사항 표들을 하나의 표로 통합하세요
2. **검증 상태 추가**: 검증 상태 필드를 추가한 뒤 모든 요구사항의 검증 상태를 "unchecked" 상태로 표시한 뒤 작업을 시작하세요
3. **중복 제거**: 완전히 동일한 내용을 담고 있는 요구사항들을 식별하고 중복된 내용이 있다면 구체적인 것은 놔두고, 덜 구체적인 것의 검증 상태를 "duplicated" 상태로 변경하세요
4. **일관성 확보**: 요구사항 ID 체계를 통일하고 일관된 형식으로 정리하세요
5. **수정 금지**: 내용을 수정하거나 항목을 제거하지 말고 검증 상태만 변경하세요

**출력 형식: 반드시 아래 마크다운 형식으로만 출력하세요:**

출력에 아래 내용을 포함해주세요. 

| 중복으로 표시된 ID | 원래 요구사항 | 중복 처리 사유 |
|---|---|---|
| [원본 ID] | [중복 처리된 요구사항 내용] | [중복/덜 구체적/유사함 등] |

**통합 과정 요약:**
- 총 입력 요구사항 수: [개수]
- 최종 통합 요구사항 수: [개수]
- 중복으로 표시된 항목 수: [개수]

**반드시 지켜야 할 규칙:**
1. 검증 상태는 "unchecked" 또는 "duplicated"만 사용하세요
2. 검증 상태에 따라 재정렬한 후 요구사항 ID를 REQ-001부터 순차적으로 새로 부여하세요
3. 내용 수정 및 항목 제거 없이 검증 상태만 변경하세요`,

  'validation-node': `
  당신은 기술 문서 검증 전문가입니다. 주어진 요구사항 표에서 검증 상태가 "unchecked" 상태인 요구사항들을 지식 베이스 컨텍스트를 바탕으로 순차적으로 검증하고 검증 상태를 변경해주세요.

**검증할 요구사항:**
{input_data}

**지식 베이스 컨텍스트:**
{context}

**검증 작업 지침:**
1. **순차적 검증**: 검증 상태가 "unchecked" 상태인 요구사항들만 검증
2. **이미 통과된 항목**: 검증 상태가 "pass", "fail", "duplicated" 상태인 요구사항은 그대로 유지
3. **통과 조건**: 지식 베이스에서 해당 요구사항의 근거를 명확히 찾을 수 있는 경우 검증 상태를 "pass"로 변경
4. **실패 조건**: 지식 베이스의 내용과 모순되는 내용이 있는 경우 검증 상태를 "fail"로 변경
5. **불확실한 경우**: 통과 조건과 실패 조건에 해당하지 않는 경우, 애매하거나 불확실한 경우는 모두 검증 상태를 "unchecked" 상태를 유지

**검증 기준:**
- **사실 정확성**: 지식 베이스 내용과 일치하는지 확인
- **근거 존재성**: 요구사항의 근거(reference)를 지식 베이스에서 찾을 수 있는지 확인
- **모호성 배제**: 요구사항 내용이 충분히 이해 가능한지 확인

출력에 아래 내용을 포함해주세요. 

✅ **통과된 요구사항:**
| ID | 요구사항 | 통과 사유 |
|---|---|---|
| REQ-XXX | [요구사항 요약] | [지식 베이스에서 찾은 명확한 근거] |

❌ **실패한 요구사항:**
| ID | 요구사항 | 실패 사유 |
|---|---|---|
| REQ-YYY | [요구사항 요약] | [지식 베이스와 모순되는 내용] |

**검증 통계:**
- 전체 요구사항: [총 개수]개
- 이번에 검증한 요구사항: [이번 검증 개수]개
- 현재까지 총 통과: [누적 통과 개수]개
- 현재까지 총 실패: [누적 실패 개수]개
- Unchecked : [unchecked 개수]개
- 현재 검증 완료율: [검증 완료율]%"

**반드시 지켜야 할 규칙:**
1. 검증 상태는 "unchecked", "pass", "fail", "duplicated"만 사용하세요
2. 검증 상태를 변경할 때는 반드시 검증 기준에 따라 신중하게 판단하세요
3. 내용 수정 및 항목 제거 없이 검증 상태만 변경하세요`
};

// 노드 타입별 출력 형식 템플릿 (마크다운 태그 기반)
export const OUTPUT_FORMAT_TEMPLATES = {
  'generation-node': `| ID | 요구사항 | 근거(reference) |
|---|---|---|
| REQ-001 | [구체적인 요구사항 내용] | [원문 내용과 위치] |
| REQ-002 | ... | ... |`,
  
  'ensemble-node': `| ID | 요구사항 (Requirement) | 근거(Reference) | 검증 상태 |
|---|---|---|---|
| REQ-001 | [구체적인 요구사항 내용] | [원문 내용과 위치] | unchecked/duplicated |
| REQ-002 | ... | ... | unchecked/duplicated |`,

  'validation-node': `| ID | 요구사항 (Requirement) | 근거(reference) | 검증 상태 |
|---|---|---|---|
| REQ-001 | [구체적인 요구사항 내용] | [원문 내용과 위치] | pass/fail/unchecked/duplicated |
| REQ-002 | ... | ... | pass/fail/unchecked/duplicated |
</output>`
};

// 변수 설명
export const PROMPT_VARIABLES = {
  '{input_data}': '이전 노드들에서 전달된 데이터가 여기에 삽입됩니다',
  '{context}': '지식 베이스에서 검색된 관련 문서 내용이 여기에 삽입됩니다'
};
